group 'wintersweet'
version '0.1.1'

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'jetty'
apply plugin: 'pmd'
apply plugin: 'findbugs'

sourceCompatibility = 1.8
targetCompatibility = 1.8

/* 支持中文字符 */
[compileJava, compileTestJava, javadoc]*.options*.encoding = "UTF-8"

sourceSets.main.output.classesDir = file("bin")

repositories {
    maven {
        url "http://maven.aliyun.com/nexus/content/groups/public/"
    }
    mavenLocal()
    mavenCentral()
    flatDir name: 'localRepository', dirs: 'lib'
}

ext {
    springMVCVersion = '4.3.6.RELEASE'
    log4j2Version = '2.7'
    aspectjVersion = '1.8.9'
    jacksonVersion = '2.8.6'
}

dependencies {
    providedCompile (
            'javax.servlet:javax.servlet-api:3.0.1',
            'javax.servlet.jsp:jsp-api:2.1',
            'javax.servlet:jstl:1.1.2',
            'taglibs:standard:1.1.2' /* JSP的扩展标记库 */
    )
    compile (
            fileTree(dir: 'lib', include: ['*.jar']), /* 包含lib文件夹下的所有jar文件 */
            'com.google.guava:guava:20.0',

            /* springMVC */
            'org.springframework:spring-core:' + springMVCVersion,
            'org.springframework:spring-web:' + springMVCVersion,
            'org.springframework:spring-webmvc:' + springMVCVersion,
            'org.springframework:spring-aop:' + springMVCVersion,

            /* 连接池 */
            'com.alibaba:druid:1.0.27',

            /* 数据库驱动 */
            'mysql:mysql-connector-java:6.0.5',

            /* aop支持 */
            'org.aspectj:aspectjrt:' + aspectjVersion,
            'org.aspectj:aspectjweaver:' + aspectjVersion,
            'org.aspectj:aspectjtools:' + aspectjVersion,

            /* 返回数据JSON构造依赖：此种依赖包，默认为null值不返回 */
            'com.fasterxml.jackson.core:jackson-core:' + jacksonVersion,
            'com.fasterxml.jackson.core:jackson-databind:' + jacksonVersion,
            'com.fasterxml.jackson.core:jackson-annotations:' + jacksonVersion,

            /* log4j */
            'org.slf4j:slf4j-api:1.7.23',
            'org.slf4j:slf4j-log4j12:1.7.23',
            'log4j:log4j:1.2.17',
            'commons-logging:commons-logging:1.2',

            /* log4j2 */
            'org.apache.logging.log4j:log4j-core:' + log4j2Version,
            'org.apache.logging.log4j:log4j-api:' + log4j2Version,
            'org.apache.logging.log4j:log4j-web:' + log4j2Version,

            /* 文件上传下载 */
            'org.apache.poi:poi:3.15',
            'org.apache.poi:poi-ooxml:3.15',
            'org.apache.poi:poi-ooxml-schemas:3.15',
            'org.apache.commons:commons-collections4:4.1',
            'commons-io:commons-io:2.2',
            'commons-fileupload:commons-fileupload:1.3.2',
            'commons-codec:commons-codec:1.10',
            'com.github.virtuald:curvesapi:1.04',

            /* 汉字拼音转换工具 */
            'com.belerweb:pinyin4j:2.5.1'

    )
    testCompile (
            'junit:junit:4.12',
            'org.hamcrest:hamcrest-core:1.3', /* 一个测试用的工具 */
            'org.springframework:spring-test:' + springMVCVersion
    )
}

/* jettyRun 的配置 */
jettyRun {
    httpPort = 8080
    reload = "automatic"
    scanIntervalSeconds = 1
    contextPath = ''
}

test {
    ignoreFailures = true
}

pmd {
    ignoreFailures = true
}

findbugs {
    sourceSets = [sourceSets.main]
    ignoreFailures = true
    reportsDir = file("$project.buildDir/findbugsReports")
    effort = "default"
    reportLevel = "medium"
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
}
